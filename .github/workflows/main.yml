name: Solar System - Code coverage

on:
  workflow_dispatch:
  push:
    branches: [ "feature" ]
  # pull_request:
  #   branches: [ "main" ]

     
jobs:
  unit-testing:
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        ports:
          - 27017:27017
    env:
        MONGO_URI: 'mongodb://localhost:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password

    strategy:
      matrix:
        nodejs-version: [18,20]
        os-type: [ubuntu-latest,macos-latest]
        exclude: 
          - os-type: macos-latest
          - os-type: ubuntu-latest
            nodejs-version: 18
          
    runs-on: ${{matrix.os-type}}

    steps:
    - name: Checkout action
      uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{matrix.nodejs-version}}

    # - run: npm ci
    - name: Install Dependencies
      run: npm install
    
    - name: Unit testing
      id: mocha-test
      run: npm test

    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: |
        echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        echo ${GITHUB_OUTPUT}

    - name: Using dependencies from cache
      uses: actions/cache@v3
      with: 
        path: node_modules  
        key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
    
    - name: Upload test results to Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with: 
        name: ${{matrix.os-type}}-${{matrix.nodejs-version}}-mocha-test-result
        path: test-results.xml

  code-coverage:
          
    runs-on: ubuntu-latest
    container: 
      image: node:18
    services:
      mongo-db:
        image: siddharth67/mongo-db:non-prod
        options: 
            --name mongo
    env:
        MONGO_URI: 'mongodb://mongo:27017/superData'
        MONGO_USERNAME: non-prod-user
        MONGO_PASSWORD: non-prod-password
    steps:
    - name: Checkout action
      uses: actions/checkout@v3

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install
    
    - name: Unit testing
      continue-on-error: true
      run: npm run coverage
    
    - name: Upload test results to Artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: code-coverage-result
        path: coverage
        retention-days: 5
    
  docker:
    name: Containerization
    needs: [unit-testing,code-coverage]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{vars.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Build For Testing
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}} ## used for versioning the docker image
      
    - name: Docker Image Testing
      run: |
        docker images
        docker run --name solar-system-app -d  \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        
        export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
        echo $IP
        
        echo Testing Image URL using wget 
        wget -q -O - 127.0.0.1:3000/live | grep live

    - name: Docker Push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          ghcr.io/${{github.repository_owner}}/my-solar-system:${{github.sha}}

